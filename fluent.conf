<source>
  @type http
  format json
</source>

<match raw>
  @type record_reformer
  tag color
</match>

<match color>
  @type color_stripper
  tag decolorized
</match>

<match decolorized>
  @type rewrite_tag_filter
  rewriterule1 tag ^(.*)$ remove_tag.$1
</match>

<match remove_tag.**>
  @type record_reformer
  remove_keys tag
  tag ${tag_suffix[1]}
</match>

<match {center,swcert}>
  @type record_reformer
  tag ruby.${tag}
</match>

<match fluent.**>
  @type record_reformer
  tag mongo.${tag}
</match>

<filter ruby.**>
  @type parser
  format /^((?<log_level_short>.), \[(?<time>.*?)\s+?#(?<pid>\d+)\]\s+?(?<log_level>\w+?) -- (?<log_tag>\S+?)?: )?(?<log>.*?)$/
  key_name log
  reserve_data yes
</filter>

<filter ruby.**>
  @type parser
  format json
  key_name log
  reserve_data yes
</filter>

<filter ruby.**>
  @type record_transformer
  <record>
    message ${log}
  </record>
</filter>

<match mongo.**>
  @type mongo
  host "#{ENV['MONGO_IP']}"
  port "#{ENV['MONGO_PORT']}"
  database "#{ENV['MONGO_DATABASE']}"

  tag_mapped
  remove_tag_prefix mongo.
  capped
  capped_size 50m

  buffer_type file
  buffer_path /fluentd/buffer/mongo.*.buffer
  buffer_queue_limit 1
  flush_interval 1s
  flush_at_shutdown true
</match>

<match **.{center,swcert}>
  @type record_reformer
  tag mongo.logs
</match>
